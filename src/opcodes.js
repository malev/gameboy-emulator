const opcodes = {
  '0x00': {
    original: 'NOP',
    fn: 'NOP',
    cycles: 4,
    PC: 1,
  },
  '0x01': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x01',
  },
  '0x02': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x02',
  },
  '0x03': {
    original: 'INC BC',
    fn: 'INC_nn',
    register: 'BC',
    cycles: 8,
    PC: 1,
  },
  '0x04': {
    original: 'INC B',
    fn: 'INC_n',
    register: 'B',
    cycles: 4,
    PC: 1,
  },
  '0x05': {
    original: 'DEC B',
    fn: 'DEC_n',
    register: 'B',
    flags: 'Z1H',
    cycles: 4,
    PC: 1,
  },
  '0x06': {
    original: 'LD B,d8',
    fn: 'LD_r1_r2',
    immediate8: true,
    register: 'B',
    flags: 'ZNHC',
    cycles: 8,
    PC: 2,
  },
  '0x07': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x07',
  },
  '0x08': {
    original: 'LD (a16),SP',
    cycles: 20,
    PC: 3,
  },
  '0x09': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x09',
  },
  '0x0A': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x0A',
  },
  '0x0B': {
    original: 'DEC BC',
    cycles: 8,
    PC: 1,
  },
  '0x0C': {
    original: 'INC C',
    fn: 'INC_n',
    register: 'C',
    flags: 'ZNHC',
    cycles: 4,
    PC: 1,
  },
  '0x0D': {
    original: 'DEC C',
    register: 'C',
    flags: 'Z 1 H -',
    cycles: 4,
    PC: 1,
  },
  '0x0E': {
    original: 'LD C,d8',
    fn: 'LD_r1_r2',
    immediate8: true,
    register: 'C',
    cycles: 8,
    PC: 2,
  },
  '0x0F': {
    original: 'RRCA',
    cycles: 4,
    PC: 1,
  },
  '0x10': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x10',
  },
  '0x11': {
    original: 'LD DE,d16',
    fn: 'LD_n_nn',
    register: 'DE',
    immediate16: true,
    cycles: 12,
    PC: 3,
  },
  '0x12': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x12',
  },
  '0x13': {
    original: 'INC DE',
    fn: 'INC_nn',
    registers: 'DE',
    cycles: 8,
    PC: 1,
  },
  '0x14': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x14',
  },
  '0x15': {
    original: 'DEC D',
    register: 'D',
    cycles: 4,
    PC: 1,
  },
  '0x16': {
    original: 'LD D,d8',
    register: 'D',
    cycles: 8,
    PC: 2,
  },
  '0x17': {
    original: 'RLA',
    fn: 'RL_n',
    register: 'A',
    cycles: 4,
    PC: 1,
  },
  '0x18': {
    original: 'JR r8',
    fn: 'JP_n',
    immediate8: true,
    cycles: 12,
    PC: 2,
  },
  '0x19': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x19',
  },
  '0x1A': {
    original: 'LD A,(DE)',
    fn: 'LD_A_n',
    register: 'DE',
    cycles: 8,
    PC: 1,
  },
  '0x1B': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x1B',
  },
  '0x1C': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x1C',
  },
  '0x1D': {
    original: 'DEC E',
    register: 'E',
    cycles: 4,
    PC: 1,
  },
  '0x1E': {
    original: 'LD E,d8',
    fn: 'LD_r1_r2',
    register: 'E',
    immediate8: true,
    cycles: 8,
    PC: 2,
  },
  '0x1F': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x1F',
  },
  '0x20': {
    original: 'JR NZ,r8',
    fn: 'JP_cc_n',
    other: 'NZ',
    immediate8: true,
    cycles: 8,
    PC: 2,
  },
  '0x21': {
    original: 'LD HL,d16',
    fn: 'LD_n_nn',
    immediate16: true,
    register: 'HL',
    cycles: 12,
    PC: 3,
  },
  '0x22': {
    original: 'LD (HL+),A',
    fn: 'LD_HLp_A',
    cycles: 8,
    PC: 1,
  },
  '0x23': {
    original: 'INC HL',
    fn: 'INC_nn',
    register: 'HL',
    cycles: 8,
    PC: 1,
  },
  '0x24': {
    original: 'INC H',
    register: 'H',
    cycles: 8,
    PC: 1,
  },
  '0x25': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x25',
  },
  '0x26': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x26',
  },
  '0x27': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x27',
  },
  '0x28': {
    original: 'JR Z,r8',
    fn: 'JP_cc_n',
    immediate8: true,
    other: 'NZ',
    cycles: 12,
    PC: 2,
  },
  '0x29': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x29',
  },
  '0x2A': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x2A',
  },
  '0x2B': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x2B',
  },
  '0x2C': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x2C',
  },
  '0x2D': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x2D',
  },
  '0x2E': {
    original: 'LD L,d8',
    cycles: 8,
    PC: 2,
  },
  '0x2F': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x2F',
  },
  '0x30': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x30',
  },
  '0x31': {
    original: 'LD SP,d16',
    fn: 'LD_n_nn',
    immediate16: true,
    register: 'SP',
    cycles: 12,
    PC: 3,
  },
  '0x32': {
    original: 'LD (HL-),A',
    fn: 'LD_HLn_A',
    cycles: 8,
    PC: 1,
  },
  '0x33': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x33',
  },
  '0x34': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x34',
  },
  '0x35': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x35',
  },
  '0x36': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x36',
  },
  '0x37': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x37',
  },
  '0x38': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x38',
  },
  '0x39': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x39',
  },
  '0x3A': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x3A',
  },
  '0x3B': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x3B',
  },
  '0x3C': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x3C',
  },
  '0x3D': {
    original: 'DEC A',
    fn: 'DEC_n',
    register: 'A',
    cycles: 4,
    PC: 1,
  },
  '0x3E': {
    original: 'LD A,d8',
    fn: 'LD_A_n',
    immediate8: true,
    cycles: 8,
    PC: 2,
  },
  '0x3F': {
    fn: 'NOT_IMPLEMENTED',
    register: '0x3F',
  },
  '0x4F': {
    original: 'LD C,A',
    fn: 'LD_r1_r2',
    registers: ['C', 'A'],
    cycles: 4,
    PC: 1,
  },
  '0x57': {
    original: 'LD D,A',
    fn: 'LD_n_A',
    register: 'D',
    cycles: 4,
    PC: 1,
  },
  '0x66': {
    original: 'LD H,(HL)',
    fn: 'LD_I8_n_HL',
    register: 'H',
    flags: 'ZNH',
    cycles: 8,
    PC: 1,
  },
  '0x67': {
    original: 'LD H,A',
    fn: 'LD_n_A',
    register: 'H',
    cycles: 4,
    PC: 1,
  },
  '0x73': {
    original: 'LD (HL),E',
    register: 'E',
    cycles: 8,
    PC: 1,
  },
  '0x77': {
    original: 'LD (HL),A',
    fn: 'LD_n_A',
    register: 'HL',
    cycles: 8,
    PC: 1,
  },
  '0x78': {
    original: 'LD A,B',
    register: 'B',
    cycles: 4,
    PC: 1,
  },
  '0x7B': {
    original: 'LD A,E',
    fn: 'LD_A_n',
    register: 'E',
    cycles: 4,
    PC: 1,
  },
  '0x7C': {
    original: 'LD A,H',
    register: 'H',
    cycles: 4,
    PC: 1,
  },
  '0x7D': {
    original: 'LD A,L',
    register: 'L',
    cycles: 4,
    PC: 1,
  },
  '0x83': {
    original: 'ADD A,E',
    register: 'E',
    cycles: 4,
    PC: 1,
  },
  '0x86': {
    original: 'ADD A,(HL)',
    register: 'HL',
    cycles: 8,
    PC: 1,
  },
  '0x87': {
    original: 'ADD A A',
    fn: 'ADD_A_reg',
    register: 'A',
    cycles: 4,
    PC: 1,
  },
  '0x88': {
    original: 'ADC A,B',
    register: 'B',
    cycles: 4,
    PC: 1,
  },
  '0x89': {
    original: 'ADC A,C',
    register: 'C',
    cycles: 4,
    PC: 1,
  },
  '0x90': {
    original: 'SUB B',
    register: 'B',
    cycles: 4,
    PC: 1,
  },
  '0x95': {
    original: 'SUB L',
    fn: 'SUB_L',
    flags: 'znhc',
    cycles: 4,
    PC: 1,
  },
  '0x96': {
    original: 'SUB (HL)',
    fn: 'SUB_n',
    register: 'HL',
    flags: 'Z1HC',
    cycles: 8,
    PC: 1,
  },
  '0xAF': {
    original: 'XOR A',
    fn: 'XOR_n',
    cycles: 4,
    register: 'A',
    PC: 1,
  },
  '0xBE': {
    original: 'CP (HL)',
    cyles: 8,
    PC: 1,
  },
  '0xC5': {
    original: 'PUSH BC',
    fn: 'PUSH_nn',
    register: 'BC',
    cycles: 16,
    PC: 1,
  },
  '0xC1': {
    original: 'POP BC',
    fn: 'POP_nn',
    register: 'BC',
    cycles: 12,
    PC: 1,
  },
  '0xC9': {
    original: 'RET',
    fn: 'RET',
    cycles: 16,
    PC: 0,
  },
  '0xCB': {
    original: 'PREFIX CB',
    fn: 'ENABLE_CB',
    immediate8: true,
    cycles: 1,
    PC: 1,  // It's actually 4 but I'll let the second function the update that
  },
  '0xCC': {
    original: 'CALL',
    cycles: 24,
    flags: 'flagsZNHC',
    PC: 3,
  },
  '0xCD': {
    original: 'CALL a16',
    fn: 'CALL_nn',
    immediate16: true,
    cycles: 12,
    PC: 0,
  },
  '0xCE': {
    original: 'ADC A,d8',
    cycles: 8,
    PC: 2,
  },
  '0xE0': {
    original: 'LDH (a8),A',
    fn: 'LDH_n_A',
    immediate8: true,
    register: 'A',
    cycles: 12,
    PC: 2,
  },
  '0xE2': {
    original: 'LD (C),A',
    fn: 'LD_C_A',
    cycles: 8,
    PC: 1,
  },
  '0xEA': {
    original: 'LD (a16),A',
    fn: 'LD_n_A',
    immediate16: true,
    cycles: 16,
    PC: 3,
  },
  '0xF0': {
    original: 'LDH A,(a8)',
    fn: 'LDH_A_n',
    immediate8: true,
    cycles: 12,
    PC: 2,
  },
  '0xFE': {
    original: 'CP d8',
    fn: 'CP_n',
    cycles: 8,
    immediate8: true,
    PC: 2,
  },
};

const cbOpcodes = {  // Prefix CB
  '0x11': {
    original: 'RL C',
    fn: 'RL_n',
    register: 'C',
    cycles: 8,
    PC: 1,
  },
  '0x7C': {
    original: 'BIT 7,H',
    fn: 'BIT_b_n',
    register: 'H',
    other: 7,
    cycles: 8,
    PC: 1,
  },
};

exports.opcodes = opcodes;
exports.cbOpcodes = cbOpcodes;
